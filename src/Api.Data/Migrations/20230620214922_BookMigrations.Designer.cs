// <auto-generated />
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230620214922_BookMigrations")]
    partial class BookMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Domain.Entities.BookEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Price")
                        .HasColumnType("varchar(10) CHARACTER SET utf8mb4")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Api.Domain.Entities.BookEntity", b =>
                {
                    b.OwnsOne("Api.Domain.Entities.SpecificationsEntity", "Specifications", b1 =>
                        {
                            b1.Property<int>("BookEntityId")
                                .HasColumnType("int");

                            b1.Property<string>("Author")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("Genres")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("Illustrator")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("OriginallyPublished")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<string>("PageCount")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.HasKey("BookEntityId");

                            b1.ToTable("Book");

                            b1.WithOwner()
                                .HasForeignKey("BookEntityId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
